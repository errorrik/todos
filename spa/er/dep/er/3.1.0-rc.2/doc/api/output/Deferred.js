Ext.data.JsonP.Deferred({"tagname":"class","name":"Deferred","autodetected":{},"files":[{"filename":"Deferred.js","href":"Deferred.html#Deferred"}],"mixins":["mini-event.EventTarget"],"members":[{"name":"","tagname":"property","owner":"Deferred","id":"property-","meta":{}},{"name":"promise","tagname":"property","owner":"Deferred","id":"property-promise","meta":{}},{"name":"resolver","tagname":"property","owner":"Deferred","id":"property-resolver","meta":{}},{"name":"state","tagname":"property","owner":"Deferred","id":"property-state","meta":{}},{"name":"syncModeEnabled","tagname":"property","owner":"Deferred","id":"property-syncModeEnabled","meta":{}},{"name":"constructor","tagname":"method","owner":"Deferred","id":"method-constructor","meta":{}},{"name":"done","tagname":"method","owner":"Deferred","id":"method-done","meta":{}},{"name":"exports['catch']","tagname":"method","owner":"Deferred","id":"method-exports['catch']","meta":{}},{"name":"fail","tagname":"method","owner":"Deferred","id":"method-fail","meta":{}},{"name":"isPromise","tagname":"method","owner":"Deferred","id":"method-isPromise","meta":{}},{"name":"reject","tagname":"method","owner":"Deferred","id":"method-reject","meta":{}},{"name":"resolve","tagname":"method","owner":"Deferred","id":"method-resolve","meta":{}},{"name":"then","tagname":"method","owner":"Deferred","id":"method-then","meta":{}},{"name":"thenBind","tagname":"method","owner":"Deferred","id":"method-thenBind","meta":{}},{"name":"thenGetProperty","tagname":"method","owner":"Deferred","id":"method-thenGetProperty","meta":{}},{"name":"thenReturn","tagname":"method","owner":"Deferred","id":"method-thenReturn","meta":{}},{"name":"thenSwallowException","tagname":"method","owner":"Deferred","id":"method-thenSwallowException","meta":{}},{"name":"all","tagname":"method","owner":"Deferred","id":"static-method-all","meta":{"static":true}},{"name":"rejected","tagname":"method","owner":"Deferred","id":"static-method-rejected","meta":{"static":true}},{"name":"require","tagname":"method","owner":"Deferred","id":"static-method-require","meta":{"static":true}},{"name":"resolved","tagname":"method","owner":"Deferred","id":"static-method-resolved","meta":{"static":true}},{"name":"when","tagname":"method","owner":"Deferred","id":"static-method-when","meta":{"static":true}},{"name":"exception","tagname":"event","owner":"Deferred","id":"static-event-exception","meta":{"static":true}},{"name":"reject","tagname":"event","owner":"Deferred","id":"static-event-reject","meta":{"static":true}},{"name":"resolve","tagname":"event","owner":"Deferred","id":"static-event-resolve","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Deferred","short_doc":"类似于jQuery的Deferred对象，是对异步操作的一种封装\n\n一个Deferred对象是一个meta.Resolver对象\n和一个meta.Promise的组合，同时提供两者的功能\n\n当创建一个Deferred对象后，通过其中的...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixins</h4><div class='dependency'>mini-event.EventTarget</div><h4>Files</h4><div class='dependency'><a href='source/Deferred.html#Deferred' target='_blank'>Deferred.js</a></div></pre><div class='doc-contents'><p>类似于jQuery的<code>Deferred</code>对象，是对异步操作的一种封装</p>\n\n<p>一个<code>Deferred</code>对象是一个<a href=\"#!/api/meta.Resolver\" rel=\"meta.Resolver\" class=\"docClass\">meta.Resolver</a>对象\n和一个<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>的组合，同时提供两者的功能</p>\n\n<p>当创建一个<code>Deferred</code>对象后，通过其中的<a href=\"#!/api/meta.Resolver\" rel=\"meta.Resolver\" class=\"docClass\">meta.Resolver</a>对象定义的方法\n来控制状态的流转，并将<a href=\"#!/api/Deferred-property-promise\" rel=\"Deferred-property-promise\" class=\"docClass\">promise</a>返回给调用者来追加回调</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-property-' class='name expandable'></a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-promise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-property-promise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-property-promise' class='name expandable'>promise</a> : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p>与当前对象关联的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象</p>\n</div><div class='long'><p>与当前对象关联的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象</p>\n</div></div></div><div id='property-resolver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-property-resolver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-property-resolver' class='name expandable'>resolver</a> : <a href=\"#!/api/meta.Resolver\" rel=\"meta.Resolver\" class=\"docClass\">meta.Resolver</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p>与当前对象关联的<a href=\"#!/api/meta.Resolver\" rel=\"meta.Resolver\" class=\"docClass\">meta.Resolver</a>对象</p>\n</div><div class='long'><p>与当前对象关联的<a href=\"#!/api/meta.Resolver\" rel=\"meta.Resolver\" class=\"docClass\">meta.Resolver</a>对象</p>\n</div></div></div><div id='property-state' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-property-state' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-property-state' class='name expandable'>state</a> : string<span class=\"signature\"></span></div><div class='description'><div class='short'>当前对象的状态\n\n一个Deferred对象一共有3个状态：\n\n\npending：还处在等待状态，并没有明确最终结果\nresolved：任务已经完成，处在成功状态\nrejected：任务已经完成，处在失败状态 ...</div><div class='long'><p>当前对象的状态</p>\n\n<p>一个<code>Deferred</code>对象一共有3个状态：</p>\n\n<ul>\n<li><code>pending</code>：还处在等待状态，并没有明确最终结果</li>\n<li><code>resolved</code>：任务已经完成，处在成功状态</li>\n<li><code>rejected</code>：任务已经完成，处在失败状态</li>\n</ul>\n\n<p>Defaults to: <code>&#39;pending&#39;</code></p></div></div></div><div id='property-syncModeEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-property-syncModeEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-property-syncModeEnabled' class='name expandable'>syncModeEnabled</a> : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>是否启用同步模式。 ...</div><div class='long'><p>是否启用同步模式。</p>\n\n<p>在同步模式下，<code>Deferred</code>对象并不符合Promise/A规范，\n当对象进入或处于<code>resolved</code>或<code>rejected</code>状态时，\n添加的回调函数会 <strong>立即</strong> 、 <strong>同步</strong> 地被执行。</p>\n<p>Defaults to: <code>false</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Deferred-method-constructor' class='name expandable'>Deferred</a>( <span class='pre'></span> ) : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-done' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-done' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-done' class='name expandable'>done</a>( <span class='pre'>callback</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个成功回调函数\n\n本方法相当于`.then(callback, null)，\n具体参考meta.Promise.then方法的说明 ...</div><div class='long'><p>添加一个成功回调函数</p>\n\n<p>本方法相当于`.then(callback, null)，\n具体参考<a href=\"#!/api/meta.Promise-method-then\" rel=\"meta.Promise-method-then\" class=\"docClass\">meta.Promise.then</a>方法的说明</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>需要添加的回调函数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-exports['catch']' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-exports['catch']' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-exports['catch']' class='name expandable'>exports['catch']</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-fail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-fail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-fail' class='name expandable'>fail</a>( <span class='pre'>callback</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个失败回调函数\n\n本方法相当于`.then(null, callback)，\n具体参考meta.Promise.then方法的说明 ...</div><div class='long'><p>添加一个失败回调函数</p>\n\n<p>本方法相当于`.then(null, callback)，\n具体参考<a href=\"#!/api/meta.Promise-method-then\" rel=\"meta.Promise-method-then\" class=\"docClass\">meta.Promise.then</a>方法的说明</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>需要添加的回调函数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-isPromise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-isPromise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-isPromise' class='name expandable'>isPromise</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>判断一个对象是否是一个meta.Promise对象\n\n该方法采用灵活的判断方式，并非要求value为Deferred的实例 ...</div><div class='long'><p>判断一个对象是否是一个<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象</p>\n\n<p>该方法采用灵活的判断方式，并非要求<code>value</code>为<code>Deferred</code>的实例</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>需要判断的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>如果<code>value</code>是<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象，则返回<code>true</code></p>\n</div></li></ul></div></div></div><div id='method-reject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-reject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-reject' class='name expandable'>reject</a>( <span class='pre'>args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>将当前对象状态设置为rejected，并执行所有失败回调函数 ...</div><div class='long'><p>将当前对象状态设置为<code>rejected</code>，并执行所有失败回调函数</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>执行回调时的参数</p>\n</div></li></ul></div></div></div><div id='method-resolve' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-resolve' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-resolve' class='name expandable'>resolve</a>( <span class='pre'>args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>将当前对象状态设置为resolved，并执行所有成功回调函数 ...</div><div class='long'><p>将当前对象状态设置为<code>resolved</code>，并执行所有成功回调函数</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>执行回调时的参数</p>\n</div></li></ul></div></div></div><div id='method-then' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-then' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-then' class='name expandable'>then</a>( <span class='pre'>[done], [fail]</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加成功回调函数及可选的失败回调函数\n\n该函数会返回一个新的Promise对象，新Promise对象将有以下行为：\n\n\n当原有Promise对象进入resolved状态时，执行done回调函数，\n并根据函数的返回值进行逻辑\n当原有Pr...</div><div class='long'><p>添加成功回调函数及可选的失败回调函数</p>\n\n<p>该函数会返回一个新的<code>Promise</code>对象，新<code>Promise</code>对象将有以下行为：</p>\n\n<ul>\n<li>当原有<code>Promise</code>对象进入<code>resolved</code>状态时，执行<code>done</code>回调函数，\n并根据函数的返回值进行逻辑</li>\n<li>当原有<code>Promise</code>对象进入<code>rejected</code>状态时，执行<code>fail</code>回调函数，\n并根据函数的返回值进行逻辑</li>\n</ul>\n\n\n<p>其中 <strong>根据函数的返回值进行逻辑</strong> 具体如下：</p>\n\n<ul>\n<li>当函数返回非<code>null</code>或<code>undefined</code>时，使用返回值进入<code>resolved</code>状态</li>\n<li>当函数抛出异常时，使用异常对象进入<code>rejected</code>状态</li>\n</ul>\n\n\n<p>另如果当前<code>Promise</code>对象不处在<code>pending</code>状态，则：</p>\n\n<ul>\n<li>如果处在<code>resolved</code>状态，则成功回调函数会被立即异步执行</li>\n<li>如果处在<code>rejected</code>状态，则失败回调函数会被立即异步执行</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>done</span> : Function (optional)<div class='sub-desc'><p>成功时执行的回调函数</p>\n</div></li><li><span class='pre'>fail</span> : Function (optional)<div class='sub-desc'><p>失败时执行的回调函数，可选参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-thenBind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-thenBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-thenBind' class='name expandable'>thenBind</a>( <span class='pre'>handler, thisObject</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个回调函数，可指定函数执行时的this对象以及额外参数 ...</div><div class='long'><p>添加一个回调函数，可指定函数执行时的<code>this</code>对象以及额外参数</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>需要执行的回调函数</p>\n</div></li><li><span class='pre'>thisObject</span> : Object<div class='sub-desc'><p>指定的<code>this</code>对象\n@parma {*...} args 额外参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-thenGetProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-thenGetProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-thenGetProperty' class='name expandable'>thenGetProperty</a>( <span class='pre'>propertyName</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个回调函数，返回resolve对象的指定属性 ...</div><div class='long'><p>添加一个回调函数，返回<code>resolve</code>对象的指定属性</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>propertyName</span> : string<div class='sub-desc'><p>指定的属性名</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-thenReturn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-thenReturn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-thenReturn' class='name expandable'>thenReturn</a>( <span class='pre'>value</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个回调函数，返回指定的值 ...</div><div class='long'><p>添加一个回调函数，返回指定的值</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : *<div class='sub-desc'><p>指定的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div><div id='method-thenSwallowException' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-method-thenSwallowException' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-method-thenSwallowException' class='name expandable'>thenSwallowException</a>( <span class='pre'></span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>添加一个回调函数，将所有的异常静默处理\n\n此方法相当于添加一个空函数作为reject函数 ...</div><div class='long'><p>添加一个回调函数，将所有的异常静默处理</p>\n\n<p>此方法相当于添加一个空函数作为<code>reject</code>函数</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>新的<code>Promise</code>对象</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-all' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-method-all' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-method-all' class='name expandable'>all</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>生成一个新的meta.Promise对象，当所有给定的meta.Promise对象完成后触发\n\n其触发逻辑如下：\n\n\n如果所有给定的meta.Promise对象均进入resolved状态，则该meta.Promise对象进入resol...</div><div class='long'><p>生成一个新的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象，当所有给定的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象完成后触发</p>\n\n<p>其触发逻辑如下：</p>\n\n<ul>\n<li>如果所有给定的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象均进入<code>resolved</code>状态，则该<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象进入<code>resolved</code>状态</li>\n<li>如果有至少一个<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象进入<code>rejected</code>状态，则该<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象进入<code>rejected</code>状态</li>\n</ul>\n\n\n<p>当新的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象触发时，将按照传入的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象的顺序，\n依次提供参数，且根据原<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象的回调参数，有以下情况：</p>\n\n<ul>\n<li>如果给定参数只有一个，使用这一个参数</li>\n<li>如果给定多个参数，则提供一个数组包含这些参数</li>\n</ul>\n\n\n<p>本方法对参数的方法与<code>Array.prototyp.concat</code>相同，任意一个参数是数组则会展开</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>... | <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>[]...<div class='sub-desc'><p>需要组合的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-rejected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-method-rejected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-method-rejected' class='name expandable'>rejected</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>返回一个已经处于rejected状态的meta.Promise对象 ...</div><div class='long'><p>返回一个已经处于<code>rejected</code>状态的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>用于调用<a href=\"#!/api/meta.Resolver-method-reject\" rel=\"meta.Resolver-method-reject\" class=\"docClass\">meta.Resolver.reject</a>方法的参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-require' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-method-require' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-method-require' class='name expandable'>require</a>( <span class='pre'>modules</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>返回一个meta.Promise对象，\n当指定的模块被AMD加载器加载后，进入resolved状态 ...</div><div class='long'><p>返回一个<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象，\n当指定的模块被AMD加载器加载后，进入<code>resolved</code>状态</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>modules</span> : string[]<div class='sub-desc'><p>需要加载的模块列表</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-resolved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-method-resolved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-method-resolved' class='name expandable'>resolved</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>返回一个已经处于resolved状态的meta.Promise对象 ...</div><div class='long'><p>返回一个已经处于<code>resolved</code>状态的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>用于调用<a href=\"#!/api/meta.Resolver-method-resolve\" rel=\"meta.Resolver-method-resolve\" class=\"docClass\">meta.Resolver.resolve</a>方法的参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-when' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-method-when' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-method-when' class='name expandable'>when</a>( <span class='pre'>value</span> ) : <a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>返回一个以给定值为结果的resolved状态的meta.Promise对象，\n该方法可用于统一同步和异步编程模型 ...</div><div class='long'><p>返回一个以给定值为结果的<code>resolved</code>状态的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>对象，\n该方法可用于统一同步和异步编程模型</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>给定的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a></span><div class='sub-desc'><p>如果<code>value</code>本身是一个<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>，则直接返回其本身。\n如果<code>value</code>是普通对象，则返回一个 <strong>同步</strong> 的处于<code>resolved</code>状态的<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>，\n该<a href=\"#!/api/meta.Promise\" rel=\"meta.Promise\" class=\"docClass\">meta.Promise</a>以<code>value</code>为值进入<code>resolved</code>状态</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='static-event-exception' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-event-exception' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-event-exception' class='name expandable'>exception</a>( <span class='pre'>deferred, args, reason</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>当回调函数执行出现错误时触发，在此事件后会再触发reject事件 ...</div><div class='long'><p>当回调函数执行出现错误时触发，在此事件后会再触发<a href=\"#!/api/Deferred-static-event-reject\" rel=\"Deferred-static-event-reject\" class=\"docClass\">reject</a>事件</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deferred</span> : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><div class='sub-desc'><p>当前的<a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a>对象</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>抛出的错误对象形成的数组，肯定只有1项</p>\n</div></li><li><span class='pre'>reason</span> : Mixed<div class='sub-desc'><p>抛出的错误对象</p>\n</div></li></ul></div></div></div><div id='static-event-reject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-event-reject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-event-reject' class='name expandable'>reject</a>( <span class='pre'>deferred, args, reason</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>当任意一个Deferred对象进入rejected状态时触发 ...</div><div class='long'><p>当任意一个<code>Deferred</code>对象进入<code>rejected</code>状态时触发</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deferred</span> : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><div class='sub-desc'><p>当前的<a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a>对象</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>改变状态时提供的参数</p>\n</div></li><li><span class='pre'>reason</span> : Mixed<div class='sub-desc'><p>相当于<code>args[0]</code>，供多数场景下快速访问</p>\n</div></li></ul></div></div></div><div id='static-event-resolve' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deferred'>Deferred</span><br/><a href='source/Deferred.html#Deferred-static-event-resolve' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deferred-static-event-resolve' class='name expandable'>resolve</a>( <span class='pre'>deferred, args, reason</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>当任意一个Deferred对象进入resolved状态时触发 ...</div><div class='long'><p>当任意一个<code>Deferred</code>对象进入<code>resolved</code>状态时触发</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deferred</span> : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><div class='sub-desc'><p>当前的<a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a>对象</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>改变状态时提供的参数</p>\n</div></li><li><span class='pre'>reason</span> : Mixed<div class='sub-desc'><p>相当于<code>args[0]</code>，供多数场景下快速访问</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});