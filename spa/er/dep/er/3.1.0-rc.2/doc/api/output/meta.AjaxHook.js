Ext.data.JsonP.meta_AjaxHook({"tagname":"class","name":"meta.AjaxHook","autodetected":{},"files":[{"filename":"AjaxHook.js","href":"AjaxHook.html#meta-AjaxHook"}],"members":[{"name":"afterParse","tagname":"method","owner":"meta.AjaxHook","id":"method-afterParse","meta":{}},{"name":"afterReceive","tagname":"method","owner":"meta.AjaxHook","id":"method-afterReceive","meta":{}},{"name":"beforeCreate","tagname":"method","owner":"meta.AjaxHook","id":"method-beforeCreate","meta":{}},{"name":"beforeExecute","tagname":"method","owner":"meta.AjaxHook","id":"method-beforeExecute","meta":{}},{"name":"beforeSend","tagname":"method","owner":"meta.AjaxHook","id":"method-beforeSend","meta":{}},{"name":"serializeArray","tagname":"method","owner":"meta.AjaxHook","id":"method-serializeArray","meta":{}},{"name":"serializeData","tagname":"method","owner":"meta.AjaxHook","id":"method-serializeData","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-meta.AjaxHook","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/AjaxHook.html#meta-AjaxHook' target='_blank'>AjaxHook.js</a></div></pre><div class='doc-contents'><p>AJAX钩子配置，通过<a href=\"#!/api/Ajax-property-hooks\" rel=\"Ajax-property-hooks\" class=\"docClass\">Ajax.hooks</a>提供，\n通过重写方法来改变AJAX的执行行为</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-afterParse' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-afterParse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-afterParse' class='name expandable'>afterParse</a>( <span class='pre'>data, xhr, options</span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>在系统按数据类型处理完响应的responseText等后调用 ...</div><div class='long'><p>在系统按数据类型处理完响应的<code>responseText</code>等后调用</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Mixed<div class='sub-desc'><p>经处理后的数据，\n根据<a href=\"#!/api/meta.AjaxOption-property-dataType\" rel=\"meta.AjaxOption-property-dataType\" class=\"docClass\">meta.AjaxOption.dataType</a>的配置来决定类型</p>\n</div></li><li><span class='pre'>xhr</span> : <a href=\"#!/api/meta.FakeXHR\" rel=\"meta.FakeXHR\" class=\"docClass\">meta.FakeXHR</a><div class='sub-desc'><p>处理此次请求的对象</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/meta.AjaxOption\" rel=\"meta.AjaxOption\" class=\"docClass\">meta.AjaxOption</a><div class='sub-desc'><p>请求时的参数外加默认参数融合后的配置对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>函数的返回值将被作为此次请求最终的返回数据使用</p>\n</div></li></ul></div></div></div><div id='method-afterReceive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-afterReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-afterReceive' class='name expandable'>afterReceive</a>( <span class='pre'>xhr, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xhr</span> : <a href=\"#!/api/meta.FakeXHR\" rel=\"meta.FakeXHR\" class=\"docClass\">meta.FakeXHR</a><div class='sub-desc'><p>处理此次请求的对象</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/meta.AjaxOption\" rel=\"meta.AjaxOption\" class=\"docClass\">meta.AjaxOption</a><div class='sub-desc'><p>请求时的参数外加默认参数融合后的配置对象</p>\n</div></li></ul></div></div></div><div id='method-beforeCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-beforeCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-beforeCreate' class='name expandable'>beforeCreate</a>( <span class='pre'>options, deferred</span> ) : boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>在创建XMLHttpRequest前被调用\n\n可在这个阶段查询前端的缓存，如果存在有效的缓存数据，则：\n\n\n调用deferred.resolve给出缓存的数据，使此请求完成\n返回true\n\n\n\n此后系统不会再发起请求，而直接使用缓存数据 ...</div><div class='long'><p>在创建<code>XMLHttpRequest</code>前被调用</p>\n\n<p>可在这个阶段查询前端的缓存，如果存在有效的缓存数据，则：</p>\n\n<ol>\n<li>调用<code>deferred.resolve</code>给出缓存的数据，使此请求完成</li>\n<li>返回<code>true</code></li>\n</ol>\n\n\n<p>此后系统不会再发起请求，而直接使用缓存数据</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/meta.AjaxOption\" rel=\"meta.AjaxOption\" class=\"docClass\">meta.AjaxOption</a><div class='sub-desc'><p>请求时的参数</p>\n</div></li><li><span class='pre'>deferred</span> : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><div class='sub-desc'><p>控制请求的<code>Deferred</code>对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>返回<code>true</code>表示请求已被勾子处理，系统将不再执行之后的任何逻辑</p>\n</div></li></ul></div></div></div><div id='method-beforeExecute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-beforeExecute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-beforeExecute' class='name expandable'>beforeExecute</a>( <span class='pre'>options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>在执行逻辑以前被调用 ...</div><div class='long'><p>在执行逻辑以前被调用</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/meta.AjaxOption\" rel=\"meta.AjaxOption\" class=\"docClass\">meta.AjaxOption</a><div class='sub-desc'><p>请求时的参数</p>\n</div></li></ul></div></div></div><div id='method-beforeSend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-beforeSend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-beforeSend' class='name expandable'>beforeSend</a>( <span class='pre'>xhr, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>链接已打开但还未发送数据时调用\n\n通常在这个阶段可以对HTTP头进行设置，如添加Content-Type或Cache-Control等 ...</div><div class='long'><p>链接已打开但还未发送数据时调用</p>\n\n<p>通常在这个阶段可以对HTTP头进行设置，如添加<code>Content-Type</code>或<code>Cache-Control</code>等</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xhr</span> : <a href=\"#!/api/meta.FakeXHR\" rel=\"meta.FakeXHR\" class=\"docClass\">meta.FakeXHR</a><div class='sub-desc'><p>处理此次请求的对象</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/meta.AjaxOption\" rel=\"meta.AjaxOption\" class=\"docClass\">meta.AjaxOption</a><div class='sub-desc'><p>请求时的参数外加默认参数融合后的配置对象</p>\n</div></li></ul></div></div></div><div id='method-serializeArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-serializeArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-serializeArray' class='name expandable'>serializeArray</a>( <span class='pre'>prefix, array</span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>将数组数据序列化为请求可识别的格式，默认生成使用逗号分隔的字符串 ...</div><div class='long'><p>将数组数据序列化为请求可识别的格式，默认生成使用逗号分隔的字符串</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : string<div class='sub-desc'><p>键名的前缀</p>\n</div></li><li><span class='pre'>array</span> : Array<div class='sub-desc'><p>需要序列化的数组</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-serializeData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='meta.AjaxHook'>meta.AjaxHook</span><br/><a href='source/AjaxHook.html#meta-AjaxHook-method-serializeData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/meta.AjaxHook-method-serializeData' class='name expandable'>serializeData</a>( <span class='pre'>prefix, data, contentType, xhr</span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>将数据序列化为请求识别的格式，默认使用application/x-www-form-urlencoded格式 ...</div><div class='long'><p>将数据序列化为请求识别的格式，默认使用<code>application/x-www-form-urlencoded</code>格式</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : string<div class='sub-desc'><p>键名前缀，如果当前序列化的对象本身是主对象的一个属性，\n会有此参数值，其它情况下此参数为空字符串<code>\"\"</code></p>\n</div></li><li><span class='pre'>data</span> : Mixed<div class='sub-desc'><p>需要序列化的值，可能为任何类型</p>\n</div></li><li><span class='pre'>contentType</span> : string<div class='sub-desc'><p>请求的数据格式</p>\n</div></li><li><span class='pre'>xhr</span> : <a href=\"#!/api/meta.FakeXHR\" rel=\"meta.FakeXHR\" class=\"docClass\">meta.FakeXHR</a><div class='sub-desc'><p>当前请求对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});